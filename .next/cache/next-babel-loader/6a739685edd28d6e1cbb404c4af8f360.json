{"ast":null,"code":"\"use strict\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { Router, withTranslation } from '../i18n';\nimport Header from './parts/header';\nimport Footer from './parts/footer';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport AD2HS from './parts/ad2hs';\nimport TemplateGeneric from './template/generic';\nimport TemplateFacebook from './template/facebook';\nimport TemplateTikTok from './template/tiktok';\nimport TemplateYoutube from './template/youtube';\nimport TemplateReddit from './template/reddit';\nimport TemplatePornhub from './template/pornhub';\nimport TemplateInstagram from './template/instagram';\nimport TemplateFleets from './template/fleets';\nconst {\n  h\n} = require(\"../hashMe\");\nconst Download = ({\n  t,\n  _loading,\n  _success,\n  _result,\n  _site,\n  link\n}) => {\n  const {\n    0: currentLink,\n    1: setCurrentLink\n  } = useState(link);\n  const {\n    0: new_link,\n    1: setNewLink\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(_loading);\n  const {\n    0: result,\n    1: setResult\n  } = useState(_result);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(_success);\n  const {\n    0: site,\n    1: setSite\n  } = useState(_site);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const submit = e => {\n    e.preventDefault();\n    setError(null);\n    if (new_link !== \"\") {\n      const supported_sites = [\"youtube.com\", \"youtu.be\", \"twitter.com\", \"linkedin.com\", \"facebook.com\", \"fb.com\", \"tiktok.com\", \"vimeo.com\", \"pornhub.com\", \"instagram.com\", \"reddit.com\", \"pinterest.com\", \"pin.it\", \"ok.ru\", \"periscope.tv\", \"pscp.tv\", \"t.co\", \"fb.watch\", \"fbwat.ch\", \"vk.com\", \"triller.co\"];\n      var supported = false;\n      for (let i = 0; i < supported_sites.length; i++) {\n        if (new_link.toLowerCase().indexOf(supported_sites[i]) >= 0) {\n          supported = true;\n          break;\n        }\n      }\n      if (supported) {\n        // window.open('https://dooloust.net/4/4681318', '_blank');\n        Router.push({\n          pathname: \"/download\",\n          query: {\n            link: new_link\n          }\n        });\n        load(new_link);\n      } else {\n        setError('Link not supported yet.');\n        window._gaq.push(['_trackEvent', 'notSupported', new_link]);\n      }\n    } else {\n      setError('Link is required.');\n    }\n    return false;\n  };\n  const load = async l => {\n    window.document.querySelector(\"#download\").classList.add(\"loading\");\n    setLoading(true);\n    var r;\n    r = await Axios.get(\"/api/v1/download?url=\" + encodeURIComponent(l) + \"&h=\" + encodeURIComponent(h(l)));\n    setSuccess(r.data.success);\n    setResult(r.data.result);\n    setSite(r.data.site);\n    setCurrentLink(l);\n    setLoading(false);\n    window.document.querySelector(\"#download\").classList.remove(\"loading\");\n    setTimeout(() => {\n      if (false) {\n        const videos = window.document.querySelectorAll(\"video\");\n        for (let i = 0; i < videos.length; i++) {\n          videos[i].load();\n        }\n      }\n    }, 1);\n  };\n  const loadInstagram = async url => {\n    if (url.indexOf(\"/p/\") > 0) {\n      return await loadInstagramPost(url);\n    }\n    try {\n      const rr = await Axios.get(url);\n      var arr = url.replace(\"https://\", \"\").replace(\"http://\", \"\").split(\"?\");\n      var r = [];\n      arr = arr[0].split(\"/\");\n      arr.forEach(s => {\n        if (s !== \"\") r.push(s);\n      });\n      if (r.length === 2) {\n        url = \"https://www.instagram.com/stories/\" + r[1];\n      }\n      if (url.indexOf(\"instagram.com/stories/\") >= 0) {\n        var user_id = null;\n        var username = \"\";\n        var regex = /\\\"id\\\"\\:\\\"(\\d+)\\\"/i;\n        var match = regex.exec(rr.data);\n        if (match && match.length > 1) {\n          user_id = match[1];\n        }\n        regex = /\\\"alternateName\\\"\\:\\\"\\@(.*?)\\\"/i;\n        match = regex.exec(rr.data);\n        if (match && match.length > 1) {\n          username = match[1];\n        }\n        if (user_id) {\n          return await loadInstagramStories(username, user_id);\n        } else {\n          return {\n            success: false,\n            result: null,\n            site: \"instagram\"\n          };\n        }\n      } else {\n        return await loadInstagramPost(url);\n      }\n    } catch (err) {\n      return {\n        success: false,\n        result: null,\n        site: \"instagram\"\n      };\n    }\n  };\n  const loadInstagramStories = async (username, user_id) => {\n    const r = await Axios.get(\"/api/v1/get-insta-stories?username=\" + encodeURIComponent(username) + \"&user_id=\" + encodeURIComponent(user_id) + \"&h=\" + encodeURIComponent(h(user_id)));\n    return r.data;\n  };\n  const loadInstagramPost = async url => {\n    var regex = /instagram.com\\/(\\w+)\\/(.*?)\\//i;\n    var match = regex.exec(url + \"/\");\n    if (match && match.length > 1) {\n      try {\n        let title = \"Instagram Video\";\n        let thumb = \"\";\n        let videos = [];\n        const r = await Axios.get(\"https://www.instagram.com/graphql/query/?query_hash=55a3c4bad29e4e20c20ff4cdfd80f5b4&variables=\" + encodeURIComponent(JSON.stringify({\n          \"shortcode\": match[2]\n        })));\n        const data = r.data.data.shortcode_media;\n        if (\"edge_media_to_caption\" in data && data.edge_media_to_caption.edges && data.edge_media_to_caption.edges.length > 0) {\n          title = data.edge_media_to_caption.edges[0].node.text;\n        }\n        if (\"display_url\" in data) {\n          thumb = data.display_url;\n        }\n        if (\"is_video\" in data && data.is_video) {\n          if (\"video_url\" in data) {\n            var video_url = data.video_url;\n            video_url = \"https://d.ddlvid.com/api/v1/download-video?u=\" + encodeURIComponent(video_url) + \"&h=\" + encodeURIComponent(h(video_url)) + \"&t=\" + encodeURIComponent(title);\n            videos.push({\n              url: video_url,\n              type: 'video'\n            });\n          }\n        } else {\n          if (\"display_url\" in data) {\n            var video_url = data.display_url;\n            video_url = \"https://d.ddlvid.com/api/v1/download-image?u=\" + encodeURIComponent(video_url) + \"&h=\" + encodeURIComponent(h(video_url)) + \"&t=\" + encodeURIComponent(title);\n            videos.push({\n              url: data.display_url,\n              type: 'image'\n            });\n          }\n        }\n        return {\n          success: true,\n          result: {\n            title,\n            videos,\n            thumb\n          },\n          site: \"instagram\"\n        };\n      } catch (err) {}\n    }\n    return {\n      success: false,\n      result: null,\n      site: \"instagram\"\n    };\n  };\n  useEffect(() => {\n    if (\"twttr\" in window) {\n      try {\n        window.twttr.widgets.load();\n      } catch (e) {}\n    }\n    if (window.location.host.indexOf(\"localhost\") < 0 && window.location.host.indexOf(\"127.0.0.1\") < 0) {\n      window._gaq = window._gaq || [];\n      window._gaq.push(['_setAccount', 'UA-162923642-1']);\n      window._gaq.push(['_trackPageview']);\n      var bounceKiller = {\n        trackScrolling: true,\n        scrollingPercentageNumber: 25,\n        logInterval: 10,\n        trackEvents: true,\n        trackMaxTime: true,\n        trackMaxTimeSec: 900\n      };\n      window.scrollTrackEnd = false;\n      window.ScrollMatrix = new Array();\n      function TrackingLogTime(a) {\n        return a[0] == 50 ? parseInt(a[1]) + 1 + \":00\" : (a[1] || \"0\") + \":\" + (parseInt(a[0]) + 10);\n      }\n      if (bounceKiller.trackEvents) {\n        function startTimeTracking(a) {\n          window.intervalObj = window.setInterval(function () {\n            a = TrackingLogTime(a.split(\":\").reverse());\n            window._gaq.push(['_trackEvent', \"Time\", \"LOG\", a]);\n          }, bounceKiller.logInterval * 1000);\n          if (bounceKiller.trackMaxTime) {\n            window.trackMaxTimeTimeout = setTimeout(function () {\n              clearInterval(window.intervalObj);\n            }, bounceKiller.trackMaxTimeSec * 1000);\n          }\n        }\n        window.document.addEventListener(\"DOMContentLoaded\", function () {\n          startTimeTracking(\"00\");\n        });\n      }\n      if (bounceKiller.trackScrolling) {\n        window.Frequency = bounceKiller.scrollingPercentageNumber;\n        window.Repentance = 100 / bounceKiller.scrollingPercentageNumber;\n        window.ScrollMatrix = new Array();\n        for (var ix = 0; ix < window.Repentance; ix++) {\n          window.ScrollMatrix[ix] = [window.Frequency, \"false\"];\n          window.Frequency = bounceKiller.scrollingPercentageNumber + window.Frequency;\n        }\n      }\n      ;\n      var scrollFunc = function () {\n        if (bounceKiller.trackScrolling) {\n          if (!window.scrollTrackEnd) {\n            window._gaq.push(['_trackEvent', \"Scroll\", \"LOG\", \"scrolled\"]);\n            window.scrollTrackEnd = true;\n          }\n        }\n        if (bounceKiller.trackScrolling) {\n          var body = window.document.body,\n            html = window.document.documentElement;\n          var documentHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n          for (var iz = 0; iz < window.ScrollMatrix.length; iz++) {\n            if (window.scrollY + window.innerHeight >= documentHeight * window.ScrollMatrix[iz][0] / 100 && window.ScrollMatrix[iz][1] == \"false\") {\n              window.ScrollMatrix[iz][1] = \"true\";\n              window._gaq.push(['_trackEvent', \"Percentage Page Scroll\", \"LOG\", window.ScrollMatrix[iz][0] + \"%\", {\n                nonInteraction: false\n              }]);\n            }\n          }\n        }\n      };\n      window.addEventListener('scroll', scrollFunc, true);\n      (function () {\n        var ga = window.document.createElement('script');\n        ga.type = 'text/javascript';\n        ga.async = true;\n        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n        var s = window.document.getElementsByTagName('script')[0];\n        s.parentNode.insertBefore(ga, s);\n      })();\n    }\n    load(link);\n  }, []);\n\n  // useEffect(() => {\n  //     const script = document.createElement('script');\n  //     script.src = 'https://upgulpinon.com/1?z=4692603';\n  //     document.body.appendChild(script);\n  //     return () => {\n  //         document.body.removeChild(script);\n  //     }\n  // }, [link])      \n\n  const localDownload = async (url, backup_url, filename, ext) => {\n    if (typeof ext === \"undefined\") {\n      ext = \".mp4\";\n    }\n    if (filename === \"\") {\n      filename = new Date().getTime() + ext;\n    }\n    try {\n      const config = {\n        responseType: 'blob'\n      };\n      setLoading(true);\n      const r = await Axios.get(url, config);\n      const blob = new Blob([r.data]);\n      const link = window.document.createElement('a');\n      link.href = window.URL.createObjectURL(blob);\n      link.download = \"DDLVID.COM-\" + filename;\n      setLoading(false);\n      link.click();\n    } catch (error) {\n      setLoading(false);\n      window.location = backup_url;\n    }\n  };\n  let Template = TemplateGeneric;\n  if (site === \"facebook\" || site === \"vk\") {\n    Template = TemplateFacebook;\n  }\n  if (site === \"tiktok\") {\n    Template = TemplateTikTok;\n  }\n  if (site === \"youtube\") {\n    Template = TemplateYoutube;\n  }\n  if (site === \"reddit\") {\n    Template = TemplateReddit;\n  }\n  if (site === \"pornhub\") {\n    Template = TemplatePornhub;\n  }\n  if (site === \"instagram\") {\n    Template = TemplateInstagram;\n  }\n  if (site === \"fleets\") {\n    Template = TemplateFleets;\n  }\n  return __jsx(\"div\", {\n    id: \"download\",\n    className: \"jsx-3105550290\"\n  }, result ? __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-3105550290\"\n  }, result.title, \" - DDLVid\"), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: result.title,\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"Click Here To Download\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"https://ddlvid.com/icon.png\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"https://ddlvid.com/download?link=\" + encodeURIComponent(link),\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    property: \"og:site_name\",\n    content: \"DDLVid\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"@ddl_vid\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: \"Click Here To Download\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: result.title,\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:creator\",\n    content: \"@ddl_vid\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: \"https://ddlvid.com/icon.png\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    name: \"robots\",\n    content: \"noindex\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"meta\", {\n    name: \"googlebot\",\n    content: \"noindex\",\n    className: \"jsx-3105550290\"\n  })) : __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-3105550290\"\n  }, \"DDLVid - Online Video Downloader\")), __jsx(\"main\", {\n    className: \"jsx-3105550290\"\n  }, __jsx(Header, null), loading ? __jsx(\"div\", {\n    id: \"loader\",\n    className: \"jsx-3105550290\"\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"180px\",\n    height: \"180px\",\n    viewBox: \"0 0 180 180\",\n    enableBackground: \"new 0 0 180 180\",\n    className: \"jsx-3105550290\"\n  }, __jsx(\"path\", {\n    d: \"M49.986 13.226v112.52c22.117-.295 44.354.8 66.374-1.098 19.947-1.902 41.022-7.9 51.93-20.97 11.94-14.11 12.673-31.538 10.12-47.56-2.545-13.692-12.094-27.54-29.344-34.23-21.655-9-47.3-8.797-71.487-8.663zm24.82 20.424c18.934-.976 44.055-1.7 56.95 3.657 13.55 6.04 23.03 16.99 23.768 28.652.987 9.275-1.6 19.22-10.546 26.22-7.87 6.88-18.644 12.106-30.958 13.452-13.216 1.822-26.715.882-40.06.823z\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"path\", {\n    d: \"M130.086 165.907V53.387c-22.117.295-44.354-.8-66.374 1.098-19.947 1.902-41.022 7.9-51.93 20.97-11.94 14.11-12.673 31.538-10.12 47.56 2.545 13.692 12.094 27.54 29.344 34.23 21.655 9 47.3 8.797 71.487 8.663zm-24.82-20.424c-18.934.976-44.055 1.7-56.95-3.657-13.55-6.04-23.03-16.99-23.768-28.652-.987-9.275 1.6-19.22 10.546-26.22 7.87-6.88 18.644-12.106 30.958-13.452 13.216-1.822 26.715-.882 40.06-.823z\",\n    className: \"jsx-3105550290\"\n  }))) : null, !loading ? __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"downloadContent\"\n  }, success ? __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"container\"\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      fontSize: \"18px\",\n      margin: \"20px 0\"\n    },\n    className: \"jsx-3105550290\" + \" \" + \"promo\"\n  }, __jsx(\"a\", {\n    href: \"https://go.nordvpn.net/aff_c?offer_id=15&aff_id=87658&source=ddlvid.com\",\n    target: \"_blank\",\n    className: \"jsx-3105550290\"\n  }, \"\\u26A1\\uFE0F\\uD83D\\uDD12 Download with Lightning Speed and Unbreakable Security! Get 59% off NordVPN + 3 extra months! \\uD83D\\uDCAA\\uD83C\\uDF10\")), __jsx(Template, {\n    result: result,\n    site: site,\n    link: link,\n    localDownload: localDownload,\n    className: \"jsx-3105550290\"\n  }), __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"downloadForm\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"container\"\n  }, __jsx(\"form\", {\n    action: \"/download\",\n    method: \"get\",\n    onSubmit: submit,\n    className: \"jsx-3105550290\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"field\"\n  }, __jsx(\"input\", {\n    name: \"link\",\n    id: \"link\",\n    placeholder: \"https://\",\n    value: new_link,\n    onChange: e => setNewLink(e.target.value),\n    pattern: \"https?://.+\",\n    required: true,\n    \"aria-label\": t('link_to_download'),\n    autoComplete: \"off\",\n    className: \"jsx-3105550290\"\n  }), __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"download\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"jsx-3105550290\"\n  }, t('get_a_new_video'))), error ? __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"error_message\"\n  }, error) : null))))) : __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"card\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"error_description\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"container\"\n  }, __jsx(\"div\", {\n    className: \"jsx-3105550290\" + \" \" + \"error\"\n  }, t('404_headline'), \" :/\"), __jsx(\"p\", {\n    className: \"jsx-3105550290\"\n  }, t('404_body1')), __jsx(\"p\", {\n    className: \"jsx-3105550290\"\n  }, t('404_body2')), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      fontSize: \"18px\",\n      margin: \"60px 0\"\n    },\n    className: \"jsx-3105550290\" + \" \" + \"promo\"\n  }, __jsx(\"a\", {\n    href: \"https://go.nordvpn.net/aff_c?offer_id=15&aff_id=87658&source=ddlvid.com\",\n    target: \"_blank\",\n    className: \"jsx-3105550290\"\n  }, \"\\u26A1\\uFE0F\\uD83D\\uDD12 Download with Lightning Speed and Unbreakable Security! Get 59% off NordVPN + 3 extra months! \\uD83D\\uDCAA\\uD83C\\uDF10\")))))) : null), __jsx(Footer, null), __jsx(AD2HS, null), __jsx(_JSXStyle, {\n    id: \"3105550290\"\n  }, [\"html,body{padding:0;margin:0;font-family:\\\"Plex\\\",-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen, Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;}\", \"*{box-sizing:border-box;}\", \"*:focus{outline:none;}\"]));\n};\nDownload.getInitialProps = async ({\n  query,\n  req,\n  res\n}) => {\n  const baseUrl = req ? `${req.protocol}://${req.get(\"Host\")}` : \"\";\n  const {\n    h\n  } = require(\"../hashMe\");\n  if ('link' in query) {\n    return {\n      namespacesRequired: ['common'],\n      _success: null,\n      _result: null,\n      _site: \"generic\",\n      _loading: true,\n      link: query.link\n    };\n  } else {\n    if (false) {\n      window.location = \"/\";\n    } else if (typeof res !== \"undefined\") {\n      res.redirect('/');\n    }\n    return {\n      namespacesRequired: ['common'],\n      _loading: false,\n      success: false\n    };\n  }\n};\nexport default withTranslation('download')(Download);","map":null,"metadata":{},"sourceType":"module"}